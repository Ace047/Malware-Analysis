; Test program for assembler strings

%include "/home/malware/Desktop/Malware-Analysis/joey_lib_io_v6_release.asm"

global main

section .data
	
	echo_welcome: db	"Hello, this is a long message",0
	len	equ	$ - echo_welcome
	echo_message: db "This is it changed to be all As",0
        echo_this_long: db "The string is this long: ",0
	echo_bye:	db	"Goodbye!",0
	
section .text
	main:
    mov rbp, rsp; for correct debugging
		push rbp
		mov rbp, rsp
		sub rsp,32
		
		mov rdi, QWORD echo_welcome
		call print_string_new
		call print_nl_new

                mov rdi, QWORD echo_this_long
                call print_string_new
                mov rdi, len
                call print_uint_new
                call print_nl_new
                
		mov rdi, QWORD echo_message
		call print_string_new
		call print_nl_new
		
		cld				; clear the direction flag
		mov al, 'A'			; we want to overwrite with ‘A’
		mov rdi, echo_welcome	        ; we want to overwrite the echo_welcome string
		mov rcx, len+1                    ; we need to add 1 here as the string starts at 0
		rep stosb			; repeat
		mov BYTE [echo_welcome+len+1],0	; add the null terminator
		


		mov rdi, QWORD echo_welcome
		call print_string_new
		call print_nl_new
		
		mov rdi, QWORD echo_bye
		call print_string_new
		call print_nl_new
		
		add rsp, 32
		
		pop rbp
		
		ret
		