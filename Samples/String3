; Test programme for assembler arrays
; nasm -g -I libasm_io-master/include -f elf64 strings3.asm
; gcc -g strings3.o -lasm_io -o strings3

%include "/home/malware/Desktop/Malware-Analysis/joey_lib_io_v6_release.asm"

global main

section .data
	
	echo_welcome: db	"Please enter a string",0
	echo_message: db "The string is this long: ",0
	echo_bye: db	"Goodbye!",0
	


section .text
	main:
    mov rbp, rsp; for correct debugging
		push rbp
		mov rbp, rsp
		sub rsp,32
		
		mov rdi, QWORD echo_welcome
		call print_string_new
		call print_nl_new
		call read_string_new
		mov rbx, rax				; move the address of the string
								; somewhere safe
		
		mov rdi, QWORD echo_message
		call print_string_new
	
		sub rcx,rcx			; this sets the max size to look for to be
		not rcx			; the maximum memory size
		
		
		
	        mov al, 0 ; We want to look for the byte 0, null terminator
                mov rdi, rbx		; set the start of the string
		cld
		repne scasb			; search
		sub rdi, rbx		; we need to take off the start of the string
		dec rdi			; and allow for the null terminator
		call print_uint_new
		call print_nl_new
			
		mov rdi, QWORD echo_bye
		call print_string_new
		call print_nl_new
		
		add rsp, 32
		
		pop rbp
		
		ret
		