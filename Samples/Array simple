; Test programm for assembler arrays

%include "/home/malware/Desktop/Malware-Analysis/joey_lib_io_v6_release.asm"

global main

section .data
    echo_welcome:   db	"Hello, this is a character storage program", 0
    echo_bye:       db	"Goodbye!", 0
    characters: times 26 db 0 ; an array big enough for the letters
 	
section .text

        ; This is our procedure for putting the characters into the array
 	populate:
 		lea rax, [characters]
 		loop1:
 			mov [rax],rbx
 			inc rbx
 			inc rax
 			cmp rbx, 91
 			jne loop1
 		ret
 		
        ; This prints them out
 	display:
 		loop2:
 			mov rdi, [characters+rbx]
 			call print_char_new
 			call print_nl_new
 			inc rbx
 			cmp rbx, 26
 			jne loop2
 		ret

main:
    mov rbp, rsp; for correct debugging
 		push rbp
 		mov rbp, rsp
 		sub rsp,32

 		mov rdi, QWORD echo_welcome
 		call print_string_new
 		call print_nl_new

 		mov rbx, 65   ; ASCII character for A
 		call populate
 		sub rbx,rbx
 		call display
 		
                 mov rdi, QWORD echo_bye
 		call print_string_new
 		call print_nl_new

  		add rsp, 32

 		pop rbp

 		ret